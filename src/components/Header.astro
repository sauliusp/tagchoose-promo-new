---
import CTAButton from './CTAButton.astro';
import { SITE, getMainNavigation } from '../config.ts';

---

<header class="sticky top-0 bg-background border-b border-gray-800 z-50">
  <div class="container mx-auto px-4 py-4">
    <div class="flex items-center justify-between">
      <!-- Logo (Desktop) / CTA Button (Mobile) -->
      <div class="flex items-center">
        <a href={SITE.homeUrl} class="hidden md:flex items-center hover:opacity-80 transition-opacity duration-200">
          <img src={SITE.logoUrl} alt={`${SITE.name} Logo`} class="h-8 w-auto" />
        </a>
        <div class="md:hidden">
          <CTAButton />
        </div>
      </div>
      
      <!-- Desktop Navigation -->
     <nav class="hidden md:flex items-center space-x-8">
  {getMainNavigation().map(page => (
    <a href={page.href} class="text-text hover:text-primary transition-colors duration-200">{page.name}</a>
  ))}
</nav>
      
      <!-- Desktop CTA Button -->
      <div class="hidden md:flex items-center">
        <CTAButton />
      </div>
      
      <!-- Mobile Menu Button -->
      <button 
        id="mobile-menu-button"
        class="md:hidden text-text hover:text-primary transition-colors duration-200"
        aria-label="Toggle mobile menu"
      >
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>
    </div>
    
    <!-- Mobile Menu -->
    <div 
      id="mobile-menu"
      class="hidden md:hidden mt-4 pb-4 border-t border-gray-800"
    >
      <nav class="flex flex-col space-y-4 pt-4">
        {getMainNavigation().map(page => (
          <a href={page.href} class="text-text hover:text-primary transition-colors duration-200 py-2">{page.name}</a>
        ))}
      </nav>
    </div>
  </div>
  

</header>

<script>
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  
  if (mobileMenuButton && mobileMenu) {
    mobileMenuButton.addEventListener('click', () => {
      const isHidden = mobileMenu.classList.contains('hidden');
      
      if (isHidden) {
        mobileMenu.classList.remove('hidden');
        mobileMenuButton.setAttribute('aria-expanded', 'true');
      } else {
        mobileMenu.classList.add('hidden');
        mobileMenuButton.setAttribute('aria-expanded', 'false');
      }
    });
  }
</script>