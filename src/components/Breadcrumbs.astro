---
// src/components/Breadcrumbs.astro
import { SITE, PAGES, UPDATES } from '../config';

const { url } = Astro;
const pathSegments = url.pathname.split('/').filter(p => p);

const crumbs: { name: string; href?: string }[] = [{ name: 'Home', href: '/' }];

if (pathSegments.length > 0) {
  switch (pathSegments[0]) {
    case 'features':
      crumbs.push({ name: PAGES.features.title, href: '/features' });
      break;
    case 'manifesto':
      crumbs.push({ name: PAGES.manifesto.title, href: '/manifesto' });
      break;
    case 'updates':
      crumbs.push({ name: PAGES.updates.title, href: '/updates' });
      if (pathSegments.length > 1) {
        const update = UPDATES.find(u => u.slug === pathSegments[1]);
        if (update) {
          crumbs.push({ name: update.title }); // Last crumb is not a link
        }
      }
      break;
  }
}

// Logic for the JSON-LD schema (no changes here)
const breadcrumbSchema = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": crumbs.map((crumb, index) => ({
    "@type": "ListItem",
    "position": index + 1,
    "name": crumb.name,
    "item": crumb.href ? new URL(crumb.href, Astro.site).href : undefined
  }))
};

const showEllipsis = crumbs.length > 2;
---

<nav aria-label="Breadcrumb" class="container mx-auto px-4 mt-8">
  <ol class="flex items-center gap-2 text-xs md:text-sm text-text/60">
    {crumbs.map((crumb, index) => {
      const isFirst = index === 0;
      const isLast = index === crumbs.length - 1;
      const isMiddle = !isFirst && !isLast;

      return (
        <li class:list={['flex items-center gap-2', { 'hidden md:flex': isMiddle }]}>
          {!isFirst && <span class="opacity-50">/</span>}
          {crumb.href && !isLast ? (
            <a href={crumb.href} class="hover:text-primary hover:underline">{crumb.name}</a>
          ) : (
            <span class="font-semibold text-text/80 truncate max-w-[20ch] md:max-w-none">{crumb.name}</span>
          )}
        </li>
      )
    })}

    {showEllipsis && (
      <li class="flex md:hidden items-center gap-2">
        <span class="opacity-50">/</span>
        <span class="font-semibold text-text/80">...</span>
      </li>
    )}
    
    {showEllipsis && (
      <li class="flex md:hidden items-center gap-2">
        <span class="opacity-50">/</span>
        <span class="font-semibold text-text/80 truncate max-w-[20ch] md:max-w-none">{crumbs[crumbs.length - 1].name}</span>
      </li>
    )}
  </ol>
</nav>

<script type="application/ld+json" is:inline set:html={JSON.stringify(breadcrumbSchema)} />